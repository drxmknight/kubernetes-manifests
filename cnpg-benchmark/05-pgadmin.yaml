apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: pg-benchmark
  labels:
    app: pg-benchmark
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@str.local
            - name: PGADMIN_DEFAULT_PASSWORD
              value: password
            - name: PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY
              value: "False"
            - name: PGADMIN_CONFIG_ALLOW_SPECIAL_EMAIL_DOMAINS
              value: "['local']"
          volumeMounts:
            - name: servers-volume
              mountPath: /pgadmin4/servers.json
              subPath: servers.json

      volumes:
      - name: servers-volume
        configMap:
          name: pgadmin-config

---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  namespace: pg-benchmark
  labels:
    app: pg-benchmark
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: pgadmin

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin
  namespace: pg-benchmark
  labels:
    app: pg-benchmark
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "100M"
spec:
  ingressClassName: nginx
  rules:
    - host: pgadmin.str.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pgadmin
                port:
                  number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
  namespace: pg-benchmark
  labels:
    app: pg-benchmark
data:
  servers.json: |
    {
    "Servers": {
      "1": {
          "Name": "postgres-local",
          "Group": "Servers",
          "Host": "postgres-local",
          "Port": 5432,
          "MaintenanceDB": "postgres",
          "Username": "admin",
          "UseSSHTunnel": 0,
          "TunnelPort": "22",
          "TunnelAuthentication": 0,
          "KerberosAuthentication": false,
          "ConnectionParameters": {
            "sslmode": "prefer",
            "connect_timeout": 10,
            "sslcert": "<STORAGE_DIR>/.postgresql/postgresql.crt",
            "sslkey": "<STORAGE_DIR>/.postgresql/postgresql.key"
          }
        }
      } 
    }
